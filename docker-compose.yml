version: "3.2"
services:
  script:
    build: ./app
    container_name: dc_script
    links:
      - db
    volumes:
      - type: bind
        source: ./app
        target: /usr/src/app
    command: ["python", "./populate.py"]
  app:
    build: ./app
    container_name: dc_app
    ports:
      - "5000:5000"
    volumes:
      - type: bind
        source: ./app
        target: /usr/src/app
  db:
    container_name: dc_db
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - $PWD/pg-data/:/data/postgres
       - ./db:/docker-entrypoint-initdb.d/:ro

    ports:
      - "5432:5432"
    networks:
      - default
    restart: unless-stopped
  # 
  #   image: postgres
  #   container_name: dc_db
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: dc_heroes
  #   networks: 
  #     - default
  #   volumes:
  #     - ./data.sql:/docker-entrypoint-initdb.d/init.sql
  #     - ./postgres-data:/var/lib/postgresql/data
  #   ports: 
  #     - 5432:5432
  # redis:
  #   image: redis:latest
  #   container_name: dc_redis
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - type: bind
  #       source: ./config/redis.conf
  #       target: /redis.conf
  #   command: ["redis-server", "/redis.conf"]
  pgadmin:
    container_name: dc_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-postgres}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-postgres}
    volumes:
       - $PWD/pgadmin-data/:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-16543}:80"
    networks:
      - default
    depends_on:
      - "db"
    restart: unless-stopped